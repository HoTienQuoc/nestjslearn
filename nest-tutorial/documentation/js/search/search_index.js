var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.885,1,1.672]],["body/controllers/AppController.html",[0,1.211,1,2.289,2,0.901,3,0.606,4,0.524,5,0.524,6,2.333,7,0.793,8,1.999,9,3.789,10,1.702,11,0.047,12,1.308,13,2.881,14,1.487,15,2.651,16,0.815,17,0.606,18,1.987,19,2.333,20,0.606,21,0.309,22,2.333,23,2.333,24,1.487,25,2.881,26,0.033,27,0.033]],["title/modules/AppModule.html",[28,0.885,29,1.672]],["body/modules/AppModule.html",[1,2.149,2,0.954,3,0.433,4,0.374,5,0.374,11,0.047,16,0.981,17,0.433,18,2.044,19,1.665,20,0.433,21,0.22,26,0.026,27,0.026,28,1.137,29,3.02,30,0.824,31,0.933,32,1.215,33,1.215,34,0.933,35,2.149,36,1.215,37,1.665,38,1.665,39,1.665,40,2.324,41,2.218,42,2.324,43,1.803,44,1.215,45,1.061,46,2.056,47,2.088,48,2.056,49,2.056,50,1.407,51,0.933,52,2.056,53,2.056,54,2.056]],["title/injectables/AppService.html",[18,1.285,55,1.134]],["body/injectables/AppService.html",[3,0.657,4,0.568,5,0.568,7,0.86,8,2.109,9,3.912,11,0.046,12,1.418,14,1.612,15,2.797,16,0.657,17,0.657,18,1.855,20,0.657,21,0.335,24,1.612,26,0.035,27,0.035,55,1.637,56,1.845,57,2.529,58,3.123,59,3.123,60,3.123]],["title/controllers/HealthController.html",[0,0.885,61,1.672]],["body/controllers/HealthController.html",[0,0.761,2,0.761,3,0.513,4,0.443,5,0.443,7,0.671,8,1.78,10,1.439,11,0.047,12,1.106,14,1.257,16,0.843,17,0.513,20,0.513,21,0.261,24,1.257,26,0.03,27,0.03,50,1.667,51,1.106,61,2.038,62,1.972,63,1.667,64,3.449,65,3.527,66,2.435,67,2.435,68,3.449,69,3.449,70,3.449,71,3.449,72,1.667,73,2.435,74,1.972,75,3.243,76,2.435,77,2.435,78,2.435,79,2.435,80,2.435,81,2.435,82,2.435]],["title/modules/HealthModule.html",[28,0.885,40,1.461]],["body/modules/HealthModule.html",[2,1.253,3,0.638,4,0.551,5,0.551,11,0.047,16,1.005,17,0.638,20,0.638,21,0.325,26,0.034,27,0.034,28,1.253,30,1.214,40,2.068,47,2.074,61,2.652,72,2.074,83,3.03,84,3.03,85,4.006,86,4.006,87,2.454]],["title/classes/Post.html",[21,0.303,88,1.285]],["body/classes/Post.html",[3,0.501,4,0.433,5,0.433,7,0.655,10,2.336,11,0.046,12,1.795,15,2.95,16,0.714,20,0.832,21,0.255,26,0.029,27,0.029,51,1.08,88,1.54,89,2.379,90,1.406,91,2.322,92,3.953,93,3.953,94,2.336,95,2.225,96,3.392,97,4.875,98,2.379,99,2.379,100,2.379,101,2.747,102,2.379,103,2.747,104,1.628,105,1.228,106,1.926,107,1.406,108,1.926]],["title/controllers/PostController.html",[0,0.885,109,1.672]],["body/controllers/PostController.html",[0,0.79,2,0.79,3,0.532,4,0.459,5,0.459,7,0.696,8,1.826,10,1.492,11,0.046,12,1.147,14,1.304,16,0.86,17,0.532,20,0.532,21,0.271,22,2.045,23,2.045,24,1.304,26,0.03,27,0.03,63,1.729,88,1.854,94,1.492,95,1.304,105,2.285,109,2.091,110,2.045,111,2.525,112,2.865,113,2.525,114,2.525,115,2.045,116,2.045,117,3.538,118,1.854,119,2.045,120,2.525,121,2.525,122,2.525,123,1.729,124,2.525,125,2.525,126,2.525,127,2.525]],["title/modules/PostModule.html",[28,0.885,41,1.461]],["body/modules/PostModule.html",[2,1.069,3,0.507,4,0.438,5,0.438,11,0.046,16,0.963,17,0.507,20,0.507,21,0.258,26,0.029,27,0.029,28,1.244,30,0.964,31,1.093,32,1.422,33,1.422,34,1.093,35,2.351,36,1.422,41,2.455,43,2.021,44,1.422,45,1.242,47,1.647,50,1.647,51,1.093,88,1.093,94,1.422,101,1.949,107,2.021,109,2.351,118,2.159,119,1.949,123,1.647,128,1.949,129,1.949,130,2.407,131,2.407,132,2.407,133,2.407]],["title/injectables/PostService.html",[55,1.134,118,1.285]],["body/injectables/PostService.html",[3,0.437,4,0.378,5,0.378,7,0.572,8,1.586,11,0.047,12,1.661,14,1.586,16,0.851,17,0.437,20,0.437,21,0.222,24,1.586,26,0.026,27,0.026,51,0.943,55,1.231,56,1.227,74,1.682,75,1.682,88,0.943,94,1.816,95,1.586,104,1.422,105,2.087,106,1.682,112,2.489,115,2.489,116,2.489,118,1.395,123,1.422,134,1.682,135,4.519,136,4.043,137,2.077,138,4.043,139,2.077,140,3.073,141,3.073,142,2.077,143,2.077,144,4.043,145,2.077,146,2.077,147,2.077,148,2.077,149,1.682,150,2.077,151,2.077,152,2.077]],["title/controllers/UserController.html",[0,0.885,153,1.672]],["body/controllers/UserController.html",[0,1.122,2,1.122,3,0.755,4,0.653,5,0.653,11,0.045,16,0.755,17,0.755,20,0.755,21,0.384,26,0.038,27,0.038,63,2.456,153,2.638,154,2.906,155,3.588,156,3.588]],["title/modules/UserModule.html",[28,0.885,42,1.461]],["body/modules/UserModule.html",[2,1.156,3,0.567,4,0.489,5,0.489,11,0.046,16,0.889,17,0.567,20,0.567,21,0.288,26,0.032,27,0.032,28,1.321,30,1.078,31,1.222,32,1.59,33,1.59,34,1.222,35,2.497,36,1.59,42,2.543,43,2.185,44,1.59,45,1.389,153,2.497,157,2.18,158,2.18,159,2.543,160,2.691,161,2.691,162,2.691]],["title/injectables/UserService.html",[55,1.134,159,1.461]],["body/injectables/UserService.html",[3,0.769,4,0.664,5,0.664,11,0.045,16,0.769,17,0.769,20,0.769,21,0.391,26,0.039,27,0.039,55,1.809,56,2.158,159,2.33,163,2.958]],["title/coverage.html",[164,2.62]],["body/coverage.html",[0,1.348,1,1.406,5,0.433,6,1.926,11,0.045,18,1.08,21,0.255,26,0.029,27,0.029,34,1.08,55,1.584,57,1.926,61,1.406,62,1.926,88,1.08,90,2.336,95,1.751,105,1.228,107,1.406,109,1.406,110,1.926,118,1.08,134,1.926,149,1.926,153,1.406,154,1.926,159,1.228,163,1.926,164,1.628,165,1.926,166,2.379,167,2.379,168,5.206,169,4.309,170,1.926,171,2.379,172,4.556,173,3.392,174,2.379,175,2.379,176,2.379,177,2.379]],["title/dependencies.html",[31,1.541,178,1.928]],["body/dependencies.html",[11,0.047,17,0.629,21,0.425,26,0.034,27,0.034,31,1.356,51,1.356,72,2.044,87,2.418,104,2.044,179,2.986,180,4.455,181,2.986,182,2.986,183,2.986,184,2.986,185,2.986,186,2.986,187,2.986,188,2.986,189,2.986,190,2.986,191,2.986,192,2.986,193,2.986,194,2.986,195,2.986,196,2.986,197,2.986]],["title/miscellaneous/functions.html",[198,1.081,199,2.749]],["body/miscellaneous/functions.html",[7,1.083,11,0.04,26,0.04,27,0.04,34,2.298,170,3.185,198,1.786,199,3.185,200,3.933]],["title/index.html",[7,0.656,201,2.381,202,2.381]],["body/index.html",[4,0.221,11,0.041,26,0.017,27,0.017,45,1.857,65,2.914,164,0.834,165,1.635,203,1.218,204,1.218,205,2.587,206,2.019,207,1.218,208,1.218,209,1.218,210,1.218,211,2.019,212,0.986,213,2.587,214,1.218,215,1.218,216,1.218,217,3.01,218,1.218,219,3.01,220,3.988,221,1.218,222,3.811,223,1.218,224,1.218,225,1.218,226,2.019,227,1.218,228,2.019,229,1.218,230,2.587,231,1.218,232,2.019,233,1.218,234,1.218,235,1.218,236,1.218,237,1.218,238,3.01,239,3.988,240,3.598,241,1.218,242,2.019,243,1.218,244,1.218,245,1.218,246,1.218,247,1.218,248,2.019,249,3.01,250,1.218,251,2.019,252,1.218,253,1.218,254,2.019,255,3.337,256,3.01,257,1.218,258,2.019,259,1.218,260,1.218,261,1.218,262,1.218,263,3.01,264,1.218,265,1.218,266,1.218,267,1.218,268,1.218,269,2.019,270,1.218,271,1.218,272,1.218,273,1.218,274,1.218,275,2.019,276,1.218,277,1.218,278,1.218,279,2.019,280,1.218,281,1.218,282,2.437,283,2.019,284,1.218,285,1.218,286,1.218,287,1.218,288,1.218,289,1.218,290,1.218,291,1.218,292,2.019,293,1.218,294,0.986,295,1.218,296,1.218,297,2.587,298,1.218,299,1.218,300,1.218,301,1.218,302,1.218,303,1.218,304,2.019,305,1.218,306,1.218,307,1.218,308,1.218,309,1.218,310,2.019,311,1.218,312,1.218,313,1.218,314,2.019,315,2.019,316,1.218,317,1.218,318,1.218,319,1.218,320,1.218,321,1.218,322,1.218,323,1.218,324,1.218,325,1.218,326,1.218,327,0.986,328,1.218,329,1.218,330,1.218,331,1.218,332,1.218,333,1.218,334,0.986]],["title/modules.html",[30,1.534]],["body/modules.html",[11,0.038,26,0.038,27,0.038,29,2.084,30,1.413,40,1.82,41,1.82,42,1.82,282,3.905,294,2.856,335,4.823,336,4.823,337,5.055,338,3.526]],["title/overview.html",[339,3.099]],["body/overview.html",[2,0.795,11,0.043,18,1.861,21,0.272,26,0.03,27,0.03,28,0.795,29,3.083,30,1.018,31,1.154,32,1.502,33,1.502,34,1.154,35,1.502,36,1.502,37,2.058,38,2.058,39,2.058,40,2.115,41,2.411,42,2.411,43,2.1,44,1.502,45,1.312,56,1.502,118,1.861,128,2.058,129,2.058,157,2.058,158,2.058,159,2.115,339,2.058,340,3.554,341,2.541,342,2.541]],["title/properties.html",[91,2.323,178,1.928]],["body/properties.html",[11,0.046,26,0.04,27,0.04,91,2.617,212,3.096,327,3.096,334,3.096,343,3.823,344,3.823,345,3.823]],["title/miscellaneous/typealiases.html",[198,1.081,346,3.394]],["body/miscellaneous/typealiases.html",[7,1.073,11,0.04,26,0.04,27,0.04,90,2.302,95,2.011,103,3.155,105,2.424,198,1.769,347,3.896,348,3.155]],["title/miscellaneous/variables.html",[198,1.081,349,2.749]],["body/miscellaneous/variables.html",[7,1.053,11,0.043,26,0.04,27,0.04,90,2.259,107,2.743,108,3.096,198,1.736,348,3.096,349,3.096,350,3.823,351,3.823]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":344,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":342,"title":{},"body":{"overview.html":{}}}],["1.10.0",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":341,"title":{},"body":{"overview.html":{}}}],["4",{"_index":340,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["8.16.4",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["age",{"_index":92,"title":{},"body":{"classes/Post.html":{}}}],["alias",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":270,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":320,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":240,"title":{},"body":{"index.html":{}}}],["applications",{"_index":211,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":135,"title":{},"body":{"injectables/PostService.html":{}}}],["author",{"_index":327,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":338,"title":{},"body":{"modules.html":{}}}],["aws",{"_index":258,"title":{},"body":{"index.html":{}}}],["axios",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":321,"title":{},"body":{"index.html":{}}}],["based",{"_index":253,"title":{},"body":{"index.html":{}}}],["board",{"_index":313,"title":{},"body":{"index.html":{}}}],["body",{"_index":120,"title":{},"body":{"controllers/PostController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":93,"title":{},"body":{"classes/Post.html":{}}}],["browse",{"_index":337,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":335,"title":{},"body":{"modules.html":{}}}],["building",{"_index":206,"title":{},"body":{"index.html":{}}}],["channel",{"_index":285,"title":{},"body":{"index.html":{}}}],["check",{"_index":65,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["class",{"_index":21,"title":{"classes/Post.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/Post.html":{}}}],["classserializerinterceptor",{"_index":121,"title":{},"body":{"controllers/PostController.html":{}}}],["clicks",{"_index":269,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":252,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":128,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_providers",{"_index":129,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":157,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":158,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":276,"title":{},"body":{"index.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/Post.html":{},"injectables/PostService.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PostService.html":{}}}],["constructor(@injectmodel(post.name",{"_index":147,"title":{},"body":{"injectables/PostService.html":{}}}],["constructor(postmodel",{"_index":137,"title":{},"body":{"injectables/PostService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('health",{"_index":73,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('posts",{"_index":124,"title":{},"body":{"controllers/PostController.html":{}}}],["controller('user",{"_index":156,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":291,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":164,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":112,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["create(@body",{"_index":126,"title":{},"body":{"controllers/PostController.html":{}}}],["create(createcatdto",{"_index":141,"title":{},"body":{"injectables/PostService.html":{}}}],["create(postbody",{"_index":113,"title":{},"body":{"controllers/PostController.html":{}}}],["createcatdto",{"_index":143,"title":{},"body":{"injectables/PostService.html":{}}}],["createdpost",{"_index":148,"title":{},"body":{"injectables/PostService.html":{}}}],["createdpost.save",{"_index":151,"title":{},"body":{"injectables/PostService.html":{}}}],["db",{"_index":77,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"classes/Post.html":{},"controllers/PostController.html":{}}}],["deeper",{"_index":287,"title":{},"body":{"index.html":{}}}],["default",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":238,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":257,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":248,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":268,"title":{},"body":{"index.html":{}}}],["description",{"_index":212,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":223,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":299,"title":{},"body":{"index.html":{}}}],["discord",{"_index":284,"title":{},"body":{"index.html":{}}}],["dive",{"_index":286,"title":{},"body":{"index.html":{}}}],["docs",{"_index":80,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":165,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2e",{"_index":233,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":207,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":246,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":244,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":303,"title":{},"body":{"index.html":{}}}],["example",{"_index":219,"title":{},"body":{"index.html":{}}}],["experience",{"_index":289,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["fast",{"_index":261,"title":{},"body":{"index.html":{}}}],["features",{"_index":272,"title":{},"body":{"index.html":{}}}],["few",{"_index":263,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":136,"title":{},"body":{"injectables/PostService.html":{}}}],["focus",{"_index":271,"title":{},"body":{"index.html":{}}}],["follow",{"_index":307,"title":{},"body":{"index.html":{}}}],["framework",{"_index":205,"title":{},"body":{"index.html":{}}}],["full",{"_index":302,"title":{},"body":{"index.html":{}}}],["function",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":199,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":266,"title":{},"body":{"index.html":{}}}],["get()@healthcheck",{"_index":66,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":201,"title":{"index.html":{}},"body":{}}],["graph",{"_index":294,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":317,"title":{},"body":{"index.html":{}}}],["hands",{"_index":288,"title":{},"body":{"index.html":{}}}],["handy",{"_index":277,"title":{},"body":{"index.html":{}}}],["health",{"_index":64,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":84,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":70,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":68,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":61,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":40,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":292,"title":{},"body":{"index.html":{}}}],["here",{"_index":325,"title":{},"body":{"index.html":{}}}],["http",{"_index":76,"title":{},"body":{"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":69,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":86,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://docs.nestjs.com",{"_index":81,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":331,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":103,"title":{},"body":{"classes/Post.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PostModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":250,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":274,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":146,"title":{},"body":{"injectables/PostService.html":{}}}],["install",{"_index":265,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":221,"title":{},"body":{"index.html":{}}}],["interact",{"_index":295,"title":{},"body":{"index.html":{}}}],["job",{"_index":310,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":312,"title":{},"body":{"index.html":{}}}],["join",{"_index":323,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":328,"title":{},"body":{"index.html":{}}}],["key",{"_index":241,"title":{},"body":{"index.html":{}}}],["learn",{"_index":280,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":334,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":315,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":309,"title":{},"body":{"index.html":{}}}],["looking",{"_index":251,"title":{},"body":{"index.html":{}}}],["loop",{"_index":305,"title":{},"body":{"index.html":{}}}],["makes",{"_index":259,"title":{},"body":{"index.html":{}}}],["managing",{"_index":273,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":255,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["miscellaneous",{"_index":198,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":314,"title":{},"body":{"index.html":{}}}],["mode",{"_index":226,"title":{},"body":{"index.html":{}}}],["model",{"_index":138,"title":{},"body":{"injectables/PostService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":104,"title":{},"body":{"classes/Post.html":{},"injectables/PostService.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":71,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/PostModule.html":{}}}],["mongoosemodule.forfeature",{"_index":132,"title":{},"body":{"modules/PostModule.html":{}}}],["more",{"_index":249,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":329,"title":{},"body":{"index.html":{}}}],["name",{"_index":94,"title":{},"body":{"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{}}}],["need",{"_index":300,"title":{},"body":{"index.html":{}}}],["nest",{"_index":213,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":333,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":239,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":87,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":267,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"classes/Post.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":72,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["new",{"_index":149,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["node.js",{"_index":204,"title":{},"body":{"index.html":{}}}],["npm",{"_index":220,"title":{},"body":{"index.html":{}}}],["number",{"_index":96,"title":{},"body":{"classes/Post.html":{}}}],["offer",{"_index":311,"title":{},"body":{"index.html":{}}}],["official",{"_index":256,"title":{},"body":{"index.html":{}}}],["open",{"_index":316,"title":{},"body":{"index.html":{}}}],["optional",{"_index":116,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":339,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":178,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":115,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["part",{"_index":301,"title":{},"body":{"index.html":{}}}],["platform",{"_index":254,"title":{},"body":{"index.html":{}}}],["please",{"_index":283,"title":{},"body":{"index.html":{}}}],["possible",{"_index":247,"title":{},"body":{"index.html":{}}}],["post",{"_index":88,"title":{"classes/Post.html":{}},"body":{"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["post.controller",{"_index":131,"title":{},"body":{"modules/PostModule.html":{}}}],["post.name",{"_index":133,"title":{},"body":{"modules/PostModule.html":{}}}],["post.service",{"_index":119,"title":{},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{}}}],["post/post.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["postbody",{"_index":117,"title":{},"body":{"controllers/PostController.html":{}}}],["postcontroller",{"_index":109,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["postdocument",{"_index":105,"title":{},"body":{"classes/Post.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["postmodel",{"_index":140,"title":{},"body":{"injectables/PostService.html":{}}}],["postmodule",{"_index":41,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postmodule,mongoosemodule.forroot('mongodb://root:example@localhost:27017",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["posts",{"_index":111,"title":{},"body":{"controllers/PostController.html":{}}}],["postschema",{"_index":107,"title":{},"body":{"classes/Post.html":{},"modules/PostModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postservice",{"_index":118,"title":{"injectables/PostService.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/HealthController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":75,"title":{},"body":{"controllers/HealthController.html":{},"injectables/PostService.html":{}}}],["production",{"_index":228,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":203,"title":{},"body":{"index.html":{}}}],["project",{"_index":217,"title":{},"body":{"index.html":{}}}],["promise",{"_index":144,"title":{},"body":{"injectables/PostService.html":{}}}],["prop",{"_index":97,"title":{},"body":{"classes/Post.html":{}}}],["properties",{"_index":91,"title":{"properties.html":{}},"body":{"classes/Post.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["questions",{"_index":281,"title":{},"body":{"index.html":{}}}],["read",{"_index":324,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostController.html":{}}}],["ready",{"_index":237,"title":{},"body":{"index.html":{}}}],["real",{"_index":296,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":216,"title":{},"body":{"index.html":{}}}],["requiring",{"_index":262,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":275,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["run",{"_index":222,"title":{},"body":{"index.html":{}}}],["runs",{"_index":245,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":208,"title":{},"body":{"index.html":{}}}],["schema",{"_index":101,"title":{},"body":{"classes/Post.html":{},"modules/PostModule.html":{}}}],["schemafactory",{"_index":102,"title":{},"body":{"classes/Post.html":{}}}],["schemafactory.createforclass(post",{"_index":108,"title":{},"body":{"classes/Post.html":{},"miscellaneous/variables.html":{}}}],["schemas/post.schema",{"_index":123,"title":{},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{}}}],["server",{"_index":209,"title":{},"body":{"index.html":{}}}],["setup",{"_index":218,"title":{},"body":{"index.html":{}}}],["side",{"_index":210,"title":{},"body":{"index.html":{}}}],["simple",{"_index":264,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Post.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":319,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post.schema.ts",{"_index":348,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["src/health/health.controller.ts",{"_index":62,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:16",{"_index":67,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":83,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/post/post.controller.ts",{"_index":110,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/post/post.controller.ts:11",{"_index":114,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.module.ts",{"_index":130,"title":{},"body":{"modules/PostModule.html":{}}}],["src/post/post.service.ts",{"_index":134,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/post.service.ts:10",{"_index":142,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:15",{"_index":145,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:7",{"_index":139,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/schemas/post.schema.ts",{"_index":90,"title":{},"body":{"classes/Post.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/post/schemas/post.schema.ts:10",{"_index":100,"title":{},"body":{"classes/Post.html":{}}}],["src/post/schemas/post.schema.ts:13",{"_index":98,"title":{},"body":{"classes/Post.html":{}}}],["src/post/schemas/post.schema.ts:16",{"_index":99,"title":{},"body":{"classes/Post.html":{}}}],["src/user/user.controller.ts",{"_index":154,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":160,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":163,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["start",{"_index":224,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":227,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":229,"title":{},"body":{"index.html":{}}}],["started",{"_index":202,"title":{"index.html":{}},"body":{}}],["starter",{"_index":215,"title":{},"body":{"index.html":{}}}],["statements",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":304,"title":{},"body":{"index.html":{}}}],["steps",{"_index":242,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":260,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Post.html":{}}}],["support",{"_index":282,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":336,"title":{},"body":{"modules.html":{}}}],["table",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":243,"title":{},"body":{"index.html":{}}}],["terminusmodule",{"_index":85,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":232,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":235,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":234,"title":{},"body":{"index.html":{}}}],["tests",{"_index":230,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":318,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.db.pingcheck('database",{"_index":82,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":78,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('nestjs",{"_index":79,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.postmodel(createcatdto",{"_index":150,"title":{},"body":{"injectables/PostService.html":{}}}],["this.postmodel.find().exec",{"_index":152,"title":{},"body":{"injectables/PostService.html":{}}}],["this.postservice.create(postbody",{"_index":127,"title":{},"body":{"controllers/PostController.html":{}}}],["time",{"_index":297,"title":{},"body":{"index.html":{}}}],["touch",{"_index":326,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":332,"title":{},"body":{"index.html":{}}}],["type",{"_index":95,"title":{},"body":{"classes/Post.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":346,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":214,"title":{},"body":{"index.html":{}}}],["unit",{"_index":231,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":345,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":306,"title":{},"body":{"index.html":{}}}],["useinterceptors",{"_index":122,"title":{},"body":{"controllers/PostController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":125,"title":{},"body":{"controllers/PostController.html":{}}}],["user",{"_index":155,"title":{},"body":{"controllers/UserController.html":{}}}],["user.controller",{"_index":161,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":162,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":153,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":42,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":298,"title":{},"body":{"index.html":{}}}],["validator",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":349,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":343,"title":{},"body":{"properties.html":{}}}],["video",{"_index":290,"title":{},"body":{"index.html":{}}}],["visit",{"_index":279,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":293,"title":{},"body":{"index.html":{}}}],["watch",{"_index":225,"title":{},"body":{"index.html":{}}}],["website",{"_index":330,"title":{},"body":{"index.html":{}}}],["working",{"_index":278,"title":{},"body":{"index.html":{}}}],["world",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":308,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":322,"title":{},"body":{"index.html":{}}}],["you're",{"_index":236,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostModule } from './post/post.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModule } from './user/user.module';\nimport { HealthModule } from './health/health.module';\n\n\n@Module({\n  imports: [PostModule,MongooseModule.forRoot('mongodb://root:example@localhost:27017/'), UserModule, HealthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller, Get } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck, MongooseHealthIndicator } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: MongooseHealthIndicator\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n      () => this.db.pingCheck('database'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/schemas/post.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                breed\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/schemas/post.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/schemas/post.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/schemas/post.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type PostDocument = HydratedDocument;\n\n@Schema()\nexport class Post {\n  @Prop()\n  name: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  breed: string;\n}\n\nexport const PostSchema = SchemaFactory.createForClass(Post);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(postBody: PostDocument)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/post/post.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                postBody\n                                            \n                                                            PostDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { PostService } from './post.service';\nimport { Body, ClassSerializerInterceptor, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { PostDocument } from './schemas/post.schema';\n\n@Controller('posts')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class PostController {\n    constructor(private readonly postService: PostService){}\n\n    @Post()\n    create(@Body() postBody: PostDocument){\n        return this.postService.create(postBody);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\n\nPostService\n\nPostService\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostService } from './post.service';\nimport { PostController } from './post.controller';\nimport { Post, PostSchema } from './schemas/post.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Post.name, schema: PostSchema }])],\n  providers: [PostService],\n  controllers: [PostController]\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/post/post.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCatDto: PostDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            PostDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/post/post.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Post, PostDocument } from './schemas/post.schema';\n\n@Injectable()\nexport class PostService {\n    constructor(@InjectModel(Post.name) private postModel: Model) {}\n\n    async create(createCatDto: PostDocument): Promise {\n        const createdPost = new this.postModel(createCatDto);\n        return createdPost.save();\n    }\n\n    async findAll(): Promise {\n        return this.postModel.find().exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('user')\nexport class UserController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/post/schemas/post.schema.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/post/schemas/post.schema.ts\n            \n            variable\n            PostSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/post/schemas/post.schema.ts\n            \n            type alias\n            PostDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^4.0.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/terminus : ^11.0.0\n        \n            axios : ^1.10.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            mongoose : ^8.16.4\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostDocument   (src/.../post.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/post/schemas/post.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PostDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostSchema   (src/.../post.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/post/schemas/post.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PostSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Post)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
